# Generated by Django 3.0.8 on 2020-07-15 10:12

import Database.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Games',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('number_of_questions', models.SmallIntegerField()),
                ('number_of_players', models.SmallIntegerField()),
                ('start_time', models.DateTimeField(
                    default=django.utils.timezone.now)),
                ('category', models.CharField(choices=[('general knowledge', 'general knowledge'), ('science', 'science'), ('mythology', 'mythology'), ('sports', 'sports'), ('geography', 'geography'), ('history', 'history'), (
                    'politics', 'politics'), ('art', 'art'), ('celebrities', 'celebrities'), ('animals', 'animals'), ('vehicles', 'vehicles'), ('entertainment', 'entertainment'), ('random', 'random')], max_length=18)),
            ],
        ),
        migrations.CreateModel(
            name='Questions',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=254)),
                ('difficulty', models.CharField(max_length=8)),
                ('question_type', models.CharField(max_length=20)),
                ('text', models.CharField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='SuddenDeath',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('rounds', models.SmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('last_login', models.DateTimeField(
                    blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False,
                                                     help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=15, unique=True)),
                ('email', models.EmailField(max_length=128, unique=True)),
                ('password', models.CharField(max_length=254)),
                ('salt', models.CharField(max_length=128)),
                ('email_verified', models.BooleanField(default=False)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='')),
                ('date_joined', models.DateTimeField(
                    default=django.utils.timezone.now)),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.',
                                                  related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.',
                                                            related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserScores',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('base_score', models.SmallIntegerField()),
                ('bonus_score', models.DecimalField(
                    decimal_places=3, max_digits=6)),
                ('total_score', models.DecimalField(
                    decimal_places=3, max_digits=6)),
                ('time_taken', models.TimeField()),
                ('game_id', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE, to='Database.Games')),
                ('user_id', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserRelationships',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('relationship_status', models.CharField(choices=[
                 ('pending', 'Pending'), ('friends', 'Friends'), ('blocked', 'Blocked')], max_length=7)),
                ('user_first_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                                    related_name='user_first_id', to=settings.AUTH_USER_MODEL)),
                ('user_second_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                                     related_name='user_second_id', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserAnswers',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('result', models.BooleanField(default=False)),
                ('count_correct', models.SmallIntegerField()),
                ('count_incorrect', models.SmallIntegerField(blank=True)),
                ('question_id', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE, to='Database.Questions')),
                ('user_id', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Results',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('fifth_place_id', models.ForeignKey(on_delete=models.SET(
                    Database.models.get_sentinel_user), related_name='fifth_place_id', to=settings.AUTH_USER_MODEL)),
                ('fourth_place_id', models.ForeignKey(on_delete=models.SET(
                    Database.models.get_sentinel_user), related_name='fourth_place_id', to=settings.AUTH_USER_MODEL)),
                ('second_place_id', models.ForeignKey(on_delete=models.SET(
                    Database.models.get_sentinel_user), related_name='second_place_id', to=settings.AUTH_USER_MODEL)),
                ('sixth_place_id', models.ForeignKey(on_delete=models.SET(
                    Database.models.get_sentinel_user), related_name='sixth_place_id', to=settings.AUTH_USER_MODEL)),
                ('third_place_id', models.ForeignKey(on_delete=models.SET(
                    Database.models.get_sentinel_user), related_name='third_place_id', to=settings.AUTH_USER_MODEL)),
                ('winner_id', models.ForeignKey(on_delete=models.SET(
                    Database.models.get_sentinel_user), related_name='winner_id', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Practice',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('score', models.SmallIntegerField()),
                ('start_time', models.DateTimeField(
                    default=django.utils.timezone.now)),
                ('time_taken', models.TimeField()),
                ('user_id', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LoginAttempts',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('last_login', models.DateTimeField(
                    default=django.utils.timezone.now)),
                ('login_status', models.CharField(choices=[
                 ('failed', 'Failed'), ('success', 'success')], max_length=7)),
                ('user_id', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='games',
            name='created_by',
            field=models.ForeignKey(on_delete=models.SET(
                Database.models.get_sentinel_user), to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='games',
            name='result_id',
            field=models.ForeignKey(
                blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Database.Results'),
        ),
        migrations.AddField(
            model_name='games',
            name='sudden_death_id',
            field=models.ForeignKey(
                blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Database.SuddenDeath'),
        ),
        migrations.CreateModel(
            name='Answers',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True, serialize=False, verbose_name='ID')),
                ('correct_answer', models.CharField(max_length=254)),
                ('incorrect_answer', models.CharField(max_length=254)),
                ('incorrect_answer2', models.CharField(max_length=254)),
                ('incorrect_answer3', models.CharField(max_length=254)),
                ('question', models.ForeignKey(
                    on_delete=django.db.models.deletion.DO_NOTHING, to='Database.Questions')),
            ],
        ),
    ]
